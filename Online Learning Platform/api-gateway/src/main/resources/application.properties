server.port=8080
spring.application.name=api-gateway

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# (Either use discovery locator or explicit routes; here we use explicit routes)
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**

spring.cloud.gateway.routes[1].id=course-service
spring.cloud.gateway.routes[1].uri=lb://course-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/courses/**

spring.cloud.gateway.routes[2].id=classroom-service
spring.cloud.gateway.routes[2].uri=lb://classroom-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/classrooms/**

spring.cloud.gateway.routes[3].id=assessment-service
spring.cloud.gateway.routes[3].uri=lb://assessment-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/assessments/**

spring.cloud.gateway.routes[4].id=notification-service
spring.cloud.gateway.routes[4].uri=lb://notification-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/notifications/**

# CORS (if you plan to call from a browser later)
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=false

# JWT secret used by gateway to validate tokens (must match user-service when generating)
jwt.secret=ChangeThisSecret_1234567890
